/* 1. Show Customers (their full names, customer ID, and country) who are not in the US. */

SELECT firstname, lastname, customerid, country 
FROM customers 
WHERE country <> "USA";

/* 2. Show only the Customers from Brazil. */

SELECT firstname, lastname, customerid, country
FROM customers
WHERE country = "Brazil";

/* 3. Find the Invoices of customers who are from Brazil, showing the customer's full name, Invoice ID, Date of the invoice, and billing country. */

SELECT customers.firstname, customers.lastname, invoices.invoiceid, invoices.invoicedate, invoices.BillingCountry
FROM customers 
INNER JOIN invoices
ON customers.customerid = invoices.customerid
WHERE invoices.billingcountry = "Brazil" ;

/* 4. Show the Employees who are Sales Agents. */

SELECT * FROM employees
WHERE title LIKE "%Agent%";

/* 5. Provide a query that shows the invoices associated with each sales agent, showing the  Sales Agent's full name. */

SELECT employees.firstname,employees.lastname,invoices.invoiceid
FROM employees
JOIN customers ON customers.supportrepid = employees.employeeid
JOIN invoices ON invoices.customerid = customers.customerid;

/* 6. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers. */

SELECT  customers.firstname AS "customer first name"  ,customers.lastname AS "customer last name" ,invoices.total, customers.country, employees.firstname AS "employee first name", employees.lastname AS "employee last name"
FROM chinook.customers
JOIN employees ON employees.employeeid = customers.supportrepid
JOIN invoices ON invoices.customerid = customers.customerid;

/* 7. How many Invoices were there in 2009? */

SELECT COUNT(invoiceid) 
FROM invoices 
WHERE invoicedate LIKE "2009%";

/* 8. What are the total sales for 2009? */

SELECT SUM(total)
FROM invoices 
WHERE invoicedate LIKE "2009%";

/* 9. Write a query that includes the purchased track name with each invoice line ID. */

SELECT invoicelineid, tracks.name as "track name"
FROM invoice_items
JOIN tracks 
ON tracks.trackid = invoice_items.trackid
ORDER BY invoicelineid ASC;

/* 10. Write a query that includes the purchased track name AND artist name with each invoice line ID. */

SELECT invoicelineid, tracks.name as "track name", artists.name as "artist name"
FROM invoice_items
JOIN tracks 
ON tracks.trackid = invoice_items.trackid
JOIN artists
ON artists.artistid = albums.artistid
JOIN albums
ON albums.albumid = tracks.albumid
ORDER BY invoicelineid ASC;

/* 11. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre. */

SELECT t.name as "track", a.title as "album", m.name as "media", g.name as "genre" 
FROM tracks as t
JOIN albums as a 
ON t.albumid = a.albumid
JOIN media_types as m
ON m.mediatypeid = t.mediatypeid
JOIN genres as g
ON g.genreid = t.genreid;

/* Show the total sales made by each sales agent. */

SELECT ROUND(SUM(i.total),2) as "total sales" , e.firstname, e.lastname 
FROM invoices as i
JOIN customers as c ON c.customerid = i.customerid
JOIN employees as e ON e.employeeid = c.supportrepid
WHERE 
GROUP BY employeeid;

/* Which sales agent made the most dollars in sales in 2009? */

SELECT ROUND(SUM(i.total),2) as "total sales" , e.firstname, e.lastname 
FROM invoices as i
JOIN customers as c ON c.customerid = i.customerid
JOIN employees as e ON e.employeeid = c.supportrepid
WHERE e.title = "Sales Support Agent" AND  i.invoicedate LIKE "2009%"
GROUP BY employeeid
ORDER BY ROUND(SUM(i.total),2) DESC LIMIT 1;
